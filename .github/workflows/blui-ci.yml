name: Build

on:
    push:
        branches: ['dev', 'master']
    pull_request:
        branches: ['dev', 'master']
    pull_request_target:
        types:
            - opened
        branches:
            - '*/*'

permissions:
    pull-requests: write
    contents: read

jobs:
    prettier_lint:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Install dependencies
              run: pnpm install
            - name: Run Prettier check
              run: pnpm prettier:check

    unit_tests_workflow:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm      
            - name: install dependencies
              run: pnpm install
            - name: Run tests
              working-directory: packages/login-workflow
              run: pnpm test

    build_login_workflow:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm      
            - name: install dependencies
              run: pnpm install
            - name: Build login workflow
              working-directory: packages/login-workflow
              run: pnpm build
            - name: Save build
              uses: actions/upload-artifact@v4
              with:
                  name: workflow-dist
                  path: packages/login-workflow/dist

    publish_login_workflow:
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') }}
        needs: [prettier_lint, unit_tests_workflow, build_login_workflow]
        strategy:
            matrix:
                node-version: [20.x]
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            BRANCH: ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
        steps:
            - uses: actions/checkout@v4
            - name: Download dist
              uses: actions/download-artifact@v4
              with:
                  name: workflow-dist
                  path: packages/login-workflow/dist
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"
            - name: Install pnpm
              run: npm install -g pnpm         
            - name: Install dependencies
              run: pnpm install
              working-directory: packages/login-workflow
            - name: Publish package
              run: npm run publish:package -- -b ${{ env.BRANCH }}
              working-directory: packages/login-workflow

    test_component_library:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            node-version: [20.x]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
              node-version: ${{ matrix.node-version }}
          - name: Install pnpm
            run: npm install -g pnpm
          - name: Install dependencies
            run: pnpm install
            working-directory: packages/component-library
          - name: Run tests with coverage
            run: pnpm test -- --coverage
            working-directory: packages/component-library
          - name: Upload to Codecov
            uses: codecov/codecov-action@v4
            with:
              token: ${{ secrets.CODECOV_TOKEN }}
              directory: packages/component-library/coverage/
              files: clover.xml
              flags: unittests
              name: codecov-report
              verbose: true

    build_component_library:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            node-version: [20.x]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
              node-version: ${{ matrix.node-version }}
          - name: Install pnpm
            run: npm install -g pnpm
          - name: Install dependencies
            run: pnpm install
            working-directory: packages/component-library
          - name: Build component library
            run: pnpm build
            working-directory: packages/component-library
          - name: Save build
            uses: actions/upload-artifact@v4
            with:
              name: dist
              if-no-files-found: error
              path: packages/component-library/dist

    test_artifacts:
        runs-on: ubuntu-latest
        needs: build_component_library
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Download the dist folder
            uses: actions/download-artifact@v4
            with:
              name: dist
              path: packages/component-library/dist
          - name: Run artifact tests
            run: pnpm test:artifacts

    npm_pack:
        runs-on: ubuntu-latest
        needs: build_component_library
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Download the dist folder
            uses: actions/download-artifact@v4
            with:
              name: dist
              path: packages/component-library/dist
          - name: Pack npm
            run: npm pack
            working-directory: packages/component-library/dist
          - name: Save npm pack
            uses: actions/upload-artifact@v4
            with:
              name: tarball
              if-no-files-found: error
              path: packages/component-library/dist                  
                   
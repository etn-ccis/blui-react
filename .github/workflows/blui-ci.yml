name: Build

on:
    push:
        branches: ['dev', 'master']
    pull_request:
        branches: ['dev', 'master']
    pull_request_target:
        types:
            - opened
        branches:
            - '*/*'

permissions:
    pull-requests: write
    contents: read

jobs:
    prettier_lint:
        name: Code Quality Check
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Install dependencies
              run: pnpm install
            - name: Run Prettier check
              run: pnpm prettier:check

    unit_tests_workflow:
        name: Workflow Unit Tests
        runs-on: ubuntu-latest
        needs: prettier_lint
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm      
            - name: install dependencies
              run: pnpm install
            - name: Run tests
              working-directory: packages/login-workflow
              run: pnpm test

            - name: Run tests with coverage
              run: pnpm coverage
              working-directory: packages/login-workflow
            - name: Upload to Codecov
              uses: codecov/codecov-action@v4
              with:
                token: ${{ secrets.CODECOV_TOKEN }}
                directory: packages/login-workflow/coverage/
                files: clover.xml
                flags: unittests
                name: codecov-report
                verbose: true

    build_login_workflow:
        name: Build Workflow
        runs-on: ubuntu-latest
        needs: [prettier_lint, unit_tests_workflow]
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm      
            - name: install dependencies
              run: pnpm install
            - name: Build login workflow
              working-directory: packages/login-workflow
              run: pnpm build
            - name: Save build
              uses: actions/upload-artifact@v4
              with:
                  name: workflow-dist
                  path: packages/login-workflow/dist

    publish_login_workflow:
        name: Publish Workflow
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') }}
        needs: [prettier_lint, unit_tests_workflow, build_login_workflow]
        strategy:
            matrix:
                node-version: [20.x]
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || 'dev' }}
        steps:
            - uses: actions/checkout@v4
            - name: Download dist
              uses: actions/download-artifact@v4
              with:
                  name: workflow-dist
                  path: packages/login-workflow/dist
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"
            - name: Install pnpm
              run: npm install -g pnpm         
            - name: Install dependencies
              run: pnpm install
              working-directory: packages/login-workflow/dist
            - name: Publish package
              run: npm run publish:package -- -b ${{ env.BRANCH }}
              working-directory: packages/login-workflow/dist

    build_theme_verify_artifacts:
        name: Build and Test Themes
        runs-on: ubuntu-latest
        needs: prettier_lint
        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
            - name: Build themes
              run: pnpm build
              working-directory: packages/themes
            - name: Save build
              uses: actions/upload-artifact@v4
              with:
                  name: theme-dist
                  if-no-files-found: error
                  path: packages/themes/dist
            - name: Run tests
              working-directory: packages/themes   
              run: pnpm test

    publish_react_theme:
        name: Publish React Theme
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') }}
        needs: [build_theme_verify_artifacts, prettier_lint]
        strategy:
            matrix:
                node-version: [20.x]
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || 'dev' }}
        steps:
            - uses: actions/checkout@v4
            - name: Download dist
              uses: actions/download-artifact@v4
              with:
                  name: theme-dist
                  path: packages/themes/dist
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"
            - name: Install pnpm
              run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
            - name: Publish package
              run: npm run publish:package -- -b ${{env.BRANCH}}
              working-directory: packages/themes
            
    test_component_library:
        name: Component Library Unit Tests
        runs-on: ubuntu-latest
        needs: prettier_lint
        strategy:
          matrix:
            node-version: [20.x]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
              node-version: ${{ matrix.node-version }}
          - name: Install pnpm
            run: npm install -g pnpm
          - name: Install dependencies
            run: pnpm install
            working-directory: packages/component-library
          - name: Build themes
            run: pnpm build
            working-directory: packages/themes  
          - name: Run tests with coverage
            run: pnpm coverage
            working-directory: packages/component-library
          - name: Upload to Codecov
            uses: codecov/codecov-action@v4
            with:
              token: ${{ secrets.CODECOV_TOKEN }}
              directory: packages/component-library/coverage/
              files: clover.xml
              flags: unittests
              name: codecov-report
              verbose: true

    build_component_library:
        name: Build Component Library
        runs-on: ubuntu-latest
        needs: [prettier_lint, test_component_library]
        strategy:
          matrix:
            node-version: [20.x]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
              node-version: ${{ matrix.node-version }}
          - name: Install pnpm
            run: npm install -g pnpm
          - name: Install dependencies
            run: pnpm install
            working-directory: packages/component-library
          - name: Build component library
            run: pnpm build
            working-directory: packages/component-library
          - name: Save build
            uses: actions/upload-artifact@v4
            with:
              name: dist-component-library
              if-no-files-found: error
              path: packages/component-library/dist

    test_artifacts:
        name: Test Component Artifacts
        runs-on: ubuntu-latest
        needs: [build_component_library, prettier_lint]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Download the dist folder
            uses: actions/download-artifact@v4
            with:
              name: dist-component-library
              path: packages/component-library/dist
          - name: Install pnpm
            run: npm install -g pnpm     
          - name: Run artifact tests
            run: pnpm run test:artifacts
            working-directory: packages/component-library

    npm_pack:
        name: NPM Pack Component Library
        runs-on: ubuntu-latest
        needs: [build_component_library, prettier_lint]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Download the dist folder
            uses: actions/download-artifact@v4
            with:
              name: dist-component-library
              path: packages/component-library
          - name: Pack npm
            run: npm pack
            working-directory: packages/component-library
          - name: Save npm pack
            uses: actions/upload-artifact@v4
            with:
              name: tarball
              if-no-files-found: error
              path: packages/component-library/brightlayer-ui-react-components-*.tgz

    build_showcase:
        name: Build Showcase App
        runs-on: ubuntu-latest
        needs: [npm_pack, build_component_library, prettier_lint]
        strategy:
          matrix:
            node-version: [20.x]
        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - name: Use Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v4
            with:
              node-version: ${{ matrix.node-version }}
          - name: Install pnpm
            run: npm install -g pnpm
          - name: Install dependencies
            run: pnpm install --frozen-lockfile
            working-directory: apps/showcase
          - name: Download tarball
            uses: actions/download-artifact@v4
            with:
              name: tarball
              path: apps/showcase/tarball
          - name: Add tarball package
            run: |
              PACKAGED_VERSION=$(node -p "require('../../packages/component-library/package.json').version")
              pnpm add ./tarball/brightlayer-ui-react-components-$PACKAGED_VERSION.tgz
            working-directory: apps/showcase
          - name: Build showcase
            run: pnpm build
            working-directory: apps/showcase

    publish-components:
        name: Publish Component Library
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') }}
        needs: [build_component_library, test_component_library, build_showcase, prettier_lint]
        strategy:
            matrix:
                node-version: [20.x]
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || 'dev' }}
        steps:
            - uses: actions/checkout@v4
            - name: Download dist
              uses: actions/download-artifact@v4
              with:
                  name: dist-component-library
                  path: packages/component-library/dist
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: 'https://registry.npmjs.org'
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Install dependencies
              run: pnpm install
            - name: Publish package
              run: npm run publish:package -- -b ${{env.BRANCH}}
              working-directory: packages/component-library
              
    unit_test_cli_templates:
        name: Unit Tests for Templates
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - run: pnpm install
            - run: pnpm install
              working-directory: packages/cli-templates/templates/authentication-typescript
            - run: pnpm test
              working-directory: packages/cli-templates/templates/authentication-typescript
            - run: pnpm install
              working-directory: packages/cli-templates/templates/blank-typescript
            - run: pnpm test
              working-directory: packages/cli-templates/templates/blank-typescript
            - run: pnpm install
              working-directory: packages/cli-templates/templates/routing-typescript
            - run: pnpm test
              working-directory: packages/cli-templates/templates/routing-typescript

    build_cli_templates:
        name: Build CLI Templates
        runs-on: ubuntu-latest
        strategy:
            matrix:
              node-version: [20.x]

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm      
            - run: pnpm install
            - run: pnpm install
              working-directory: packages/cli-templates/templates/authentication-typescript
            - run: pnpm build
              working-directory: packages/cli-templates/templates/authentication-typescript
            - run: pnpm install
              working-directory: packages/cli-templates/templates/blank-typescript
            - run: pnpm build
              working-directory: packages/cli-templates/templates/blank-typescript
            - run: pnpm install
              working-directory: packages/cli-templates/templates/routing-typescript
            - run: pnpm build
              working-directory: packages/cli-templates/templates/routing-typescript

    publish_cli_templates:
        name: Publish CLI Templates
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') }}
        needs: [prettier_lint, unit_test_cli_templates, build_cli_templates]
        strategy:
            matrix:
                node-version: [20.x]
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || 'dev' }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: 'https://registry.npmjs.org'
            - name: Install pnpm
              run: npm install -g pnpm
            - run: pnpm install
            - name: Publish package
              run: npm run publish:package -- -b ${{env.BRANCH}}
              working-directory: packages/cli-templates
        
    test_design_patterns:
        name: Test Design Patterns
        runs-on: ubuntu-latest
        needs: prettier_lint
        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
            - name: Run tests
              working-directory: apps/design-patterns
              run: pnpm test

    chromatic-deployment:
        name: Chromatic Visual Testing
        runs-on: ubuntu-latest
        needs: [build_theme_verify_artifacts, build_component_library]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                   fetch-depth: 0
            
            - name: Download built themes
              uses: actions/download-artifact@v4
              with:
                  name: theme-dist
                  path: packages/themes/dist

            - name: Download built component library
              uses: actions/download-artifact@v4
              with:
                  name: dist-component-library
                  path: packages/component-library/dist       
                   
            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                   node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm

            - name: Install dependencies
              run: pnpm install 

            - name: Publish to Chromatic
              working-directory: apps/storybook
              run: npx chromatic --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }}    
              
    Build-Dev-Docs:
        runs-on: ubuntu-latest
        needs: npm_pack

        strategy:
            matrix:
                node-version: [20.x]
        env:
            VITE_REACT_APP_BRANCH: ${{ github.ref == 'refs/heads/master' && 'master' || 'dev' }}
            VITE_PUBLIC_URL: ${{ github.ref == 'refs/heads/master' && '/react' || '/react-dev' }}
            VITE_REACT_APP_GAID: ${{ github.ref == 'refs/heads/master' && 'G-Y2TXKYRFM0' || 'G-JY7JTQ87MB' }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Install dependencies
              run: pnpm install --frozen-lockfile
              working-directory: docs
            - name: Download tarball
              uses: actions/download-artifact@v4
              with:
                  name: tarball
                  path: docs/tarball
            - name: Add tarball package
              run: |
                  PACKAGED_VERSION=$(node -p "require('../packages/component-library/package.json').version")
                  pnpm add ./tarball/brightlayer-ui-react-components-$PACKAGED_VERSION.tgz
              working-directory: docs
            - run: pnpm build
              working-directory: docs
            - name: Verify build output
              run: |
                  echo "Build output verification:"
                  ls -la docs/build/
                  echo "Assets directory:"
                  ls -la docs/build/assets/ || echo "No assets directory found"
                  echo "Total files in build:"
                  find docs/build -type f | wc -l
            - name: Create .nojekyll file
              run: touch docs/build/.nojekyll
            - name: Save build
              uses: actions/upload-artifact@v4
              with:
                  name: build
                  if-no-files-found: error
                  path: docs/build

    deploy_react_doc_dev:
        name: Deploy react docs on dev
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' }}
        needs: Build-Dev-Docs
        env:
            DEV_DEPLOY_TOKEN: ${{secrets.DEV_DEPLOY_TOKEN}}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Download build
              uses: actions/download-artifact@v4
              with:
                  name: build
                  path: docs/build
            - name: Verify build contents
              run: |
                  echo "Contents of docs/build:"
                  ls -la docs/build/
                  echo "Contents of docs/build/assets:"
                  ls -la docs/build/assets/ || echo "No assets directory found"
            - name: deploy
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                  folder: docs/build
                  token: ${{env.DEV_DEPLOY_TOKEN}}
                  repository-name: brightlayer-ui-components/react-dev
                  branch: master
                  git-config-name: Brightlayer UI Agent
                  git-config-email: brightlayer-ui@eaton.com
                  commit-message: 'Automated deployment to GitHub Pages ${{github.sha}}'
                  clean: true
                  clean-exclude: |
                    .nojekyll
                    CNAME

    deploy_react_doc_prod:
        name: Deploy react docs on master
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        needs: Build-Dev-Docs
        env:
            DEV_DEPLOY_TOKEN: ${{secrets.DEV_DEPLOY_TOKEN}}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Download build
              uses: actions/download-artifact@v4
              with:
                  name: build
                  path: docs/build
            - name: Verify build contents
              run: |
                  echo "Contents of docs/build:"
                  ls -la docs/build/
                  echo "Contents of docs/build/assets:"
                  ls -la docs/build/assets/ || echo "No assets directory found"
            - name: deploy
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                  folder: docs/build
                  token: ${{env.DEV_DEPLOY_TOKEN}}
                  repository-name: brightlayer-ui-components/react
                  branch: master
                  git-config-name: Brightlayer UI Agent
                  git-config-email: brightlayer-ui@eaton.com
                  commit-message: 'Automated deployment to GitHub Pages ${{github.sha}}'
                  clean: true
                  clean-exclude: |
                    .nojekyll
                    CNAME

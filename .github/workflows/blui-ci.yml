name: Build

on:
    push:
        branches: ['dev', 'master']
    pull_request:
        branches: ['dev', 'master']
    pull_request_target:
        types:
            - opened
        branches:
            - '*/*'

permissions:
    pull-requests: write
    contents: read

jobs:
    prettier_lint:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Install dependencies
              run: pnpm install
            - name: Run Prettier check
              run: pnpm prettier:check

    unit_tests_workflow:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm      
            - name: install dependencies
              run: pnpm install
            - name: Run tests
              working-directory: packages/login-workflow
              run: pnpm test

    build_login_workflow:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm      
            - name: install dependencies
              run: pnpm install
            - name: Build login workflow
              working-directory: packages/login-workflow
              run: pnpm build
            - name: Save build
              uses: actions/upload-artifact@v4
              with:
                  name: workflow-dist
                  path: packages/login-workflow/dist

    publish_login_workflow:
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') }}
        needs: [prettier_lint, unit_tests_workflow, build_login_workflow]
        strategy:
            matrix:
                node-version: [20.x]
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            BRANCH: ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
        steps:
            - uses: actions/checkout@v4
            - name: Download dist
              uses: actions/download-artifact@v4
              with:
                  name: workflow-dist
                  path: packages/login-workflow/dist
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"
            - name: Install pnpm
              run: npm install -g pnpm         
            - name: Install dependencies
              run: pnpm install
              working-directory: packages/login-workflow
            - name: Publish package
              run: npm run publish:package -- -b ${{ env.BRANCH }}
              working-directory: packages/login-workflow

    unit_tests_themes:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Install dependencies
              run: pnpm install
            - name: Run theme unit tests
              working-directory: packages/themes
              run: pnpm test         

    build_theme_verify_artifacts:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm
              run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
            - name: Build themes
              run: pnpm build
              working-directory: packages/themes
            - name: Save build
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  if-no-files-found: error
                  path: packages/themes/dist
            - name: Run tests
              working-directory: packages/themes   
              run: pnpm test

    publish_react_theme:
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev') }}
        needs: [build_theme_verify_artifacts, unit_tests_themes, prettier_lint]
        strategy:
            matrix:
                node-version: [20.x]
        env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            BRANCH: ${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}
        steps:
            - uses: actions/checkout@v4
            - name: Download dist
              uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: packages/themes/dist
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: "https://registry.npmjs.org"
            - name: Install pnpm
              run: npm install -g pnpm
            - run: pnpm install --frozen-lockfile
            - name: Publish package
              run: npm run publish:package -- -b ${{env.BRANCH}}
              working-directory: packages/themes